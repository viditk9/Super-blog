{"version":3,"sources":["components/auth/SignIn.js","store/actions/authActions.js","components/auth/SignUp.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/projects/updateProject.js","components/projects/ProjectDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","authError","auth","firebase","dispatch","signIn","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","email","password","then","type","catch","err","props","useState","setState","handleChange","e","target","id","value","prev","uid","to","className","onSubmit","preventDefault","htmlFor","onChange","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","firstName","lastName","initials","Notifications","notifications","map","item","key","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","compose","console","log","ordered","firestoreConnect","orderBy","limit","signOut","onClick","profile","SignedOutLinks","links","createProject","authorId","add","Date","history","push","ownProps","match","params","data","projectId","updateProject","handleSubmit","myvar","length","deleteProject","delete","AuthIsLoaded","children","useSelector","isLoaded","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","UpdateProject","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","useFirestoreForProfile","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.025e2aaa.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nfunction SignIn(props) {\r\n    const initialState = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n     \r\n    function handleChange(e){\r\n        const {id, value} = e.target;\r\n        setState(prev => {\r\n            return {\r\n            ...prev,\r\n            [id]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.signIn(state)\r\n    }\r\n\r\n    const { authError, auth } = props;\r\n\r\n    if(auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" value={state.email} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" value={state.password} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                      { authError && <p>{authError}</p> }  \r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut =() => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nfunction SignUp({auth,signUp,authError}) {\r\n    const initialState = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n     \r\n    function handleChange(e){\r\n        const {id, value} = e.target;\r\n        setState(prev => {\r\n            return {\r\n            ...prev,\r\n            [id]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        signUp(state);\r\n    }\r\n\r\n    if(auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" value={state.email} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" value={state.password} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" value={state.firstName} onChange={handleChange} />\r\n                </div> \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" value={state.lastName} onChange={handleChange} />\r\n                </div> \r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">SIGN UP</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError && <p>{ authError }</p> }\r\n                    </div> \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction Notifications(props) {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Notifications</span>\r\n                <ul className=\"notifications\">\r\n                    {notifications && notifications.map(item => {\r\n                        return (\r\n                            <li key={item.id}>\r\n                                <span className=\"pink-text\">{item.user} </span>\r\n                                <span>{item.content}</span>\r\n                                <div className=\"grey-text note-date\">\r\n                                    {moment(item.time.toDate()).fromNow()}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction ProjectSummary({project}) {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ProjectList({projects}) {\r\n    return (\r\n        <div className=\"project-list section\">\r\n           {projects && projects.map(project => {\r\n               return (\r\n                <Link to={'/project/' + project.id} key={project.id}>\r\n                <ProjectSummary project={project}/>\r\n                </Link>\r\n               )\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase' \r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction Dashboard(props) {\r\n    // console.log(props);\r\n\r\n    const {projects, auth, notifications} = props;\r\n\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n        <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects}/>\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink  to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}> Log Out </a></li>\r\n            <li><NavLink to='/' className='btn btn-floating light-blue lighten-2'>\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li> \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Navbar(props) {\r\n  const { auth, profile } =props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n       <div className=\"container\">\r\n         <Link to='/' className=\"brand-logo\">Kratos</Link>   \r\n         { links }\r\n       </div> \r\n    </nav>  \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n   ","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nfunction CreateProject(props) {\r\n\r\n    const initialState = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n     \r\n    function handleChange(e){\r\n        const {id, value} = e.target;\r\n        setState(prev => {\r\n            return {\r\n            ...prev,\r\n            [id]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.createProject(state)\r\n        props.history.push('/');\r\n    }\r\n\r\n    if(!props.auth.uid) return <Redirect to='./signin' />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" value={state.title} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id=\"content\" value={state.content} className=\"materialize-textarea\" onChange={handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n          ...project,\r\n          authorFirstName: profile.firstName,\r\n          authorLastName: profile.lastName,\r\n          authorId : authorId,\r\n          createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project});    \r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        // here we can run async code\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').doc(project[1]).set({\r\n            ...project[0],\r\n            authorFirstName : getState().firebase.profile.firstName,\r\n            authorLastName : getState().firebase.profile.lastName,\r\n            authorId : getState().firebase.auth.uid,\r\n            createdAt : new Date()\r\n        }).then(() => {\r\n            dispatch({type : 'UPDATE_PROJECT', project});\r\n        }).catch((e) => {\r\n            dispatch({type : 'UPDATE_PROJECT_ERROR', e});\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        // here we can run async code\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').doc(project).delete()\r\n        .then(() => {\r\n            dispatch({type : 'DELETE_PROJECT', project});\r\n        }).catch((e) => {\r\n            dispatch({type : 'DELETE_PROJECT_ERROR', e});\r\n        })\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { updateProject } from '../../store/actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nfunction UpdateProject(props) {\r\n    const { project, projectId, auth } = props;\r\n    const initialState = {\r\n        title: '',\r\n        content : ''\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n    \r\n    function handleChange(e){\r\n        const {id, value} = e.target;\r\n        setState(prev => {\r\n            return {\r\n            ...prev,\r\n            [id]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    const updateMyState = () => {\r\n        setState({\r\n            title : project.title,\r\n            content : project.content\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state, this.props.projectId);\r\n        const myvar = [state, projectId];\r\n        props.updateProject(myvar);\r\n        props.history.push('/');\r\n    }\r\n\r\n    if(!auth.uid) return <Redirect to='../signin' />\r\n    if(project){\r\n        if(state.title.length === 0) updateMyState();\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Update Project</h5>\r\n            <div className=\"input-field\">\r\n                <h6 className=\"grey-text text-lighten-1\">Title</h6>\r\n                <input type=\"text\" id=\"title\" value = {state.title} onChange={handleChange} />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <h6 className=\"grey-text text-lighten-1\">Content</h6>\r\n                <textarea id=\"content\" className=\"materialize-textarea\" value={state.content} onChange={handleChange}></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <div className=\"btn blue  z-depth-0\" onClick={handleSubmit}>Update</div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n} \r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    const id=ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        projectId: id,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateProject: (project) => dispatch(updateProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProject);","import React, { useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { deleteProject } from '../../store/actions/projectActions'\r\nimport {Link,Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nfunction ProjectDetails(props) {\r\n    const { project, projectId, auth, deleteProject } = props;\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        // console.log(projectId);\r\n        deleteProject(projectId);\r\n        props.history.push('/');\r\n    }    \r\n\r\n    if(!auth.uid) return <Redirect to='../signin' />\r\n    if(project){\r\n        return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n            {\r\n                project.authorId === auth.uid ?\r\n                    <div className=\"row\">\r\n                        <Link to={'/update/' + projectId} key={projectId}>\r\n                            <button className=\"btn blue col waves-effect waves-light\" >Edit Article</button>   \r\n                        </Link>\r\n                        <button className=\"btn red col offset-s1 darken-1\" onClick={handleDelete} >Delete</button>\r\n                    </div> :\r\n                    <div></div>\r\n            }\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center section project-details\">\r\n                <p>Loading project...</p>    \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    const id=ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        projectId:id,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteProject: (project) => dispatch(deleteProject(project))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails) ","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport CreateProject from './components/projects/CreateProject';\nimport UpdateProject from './components/projects/updateProject';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Splash Screen</div>\n  return children\n}\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <AuthIsLoaded>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/project/:id\" component={ProjectDetails} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signUp\" component={SignUp} />\n        <Route path=\"/create\" component={CreateProject} />\n        <Route path='/update/:id' component={UpdateProject} />\n      </Switch>\n    </div>\n    </AuthIsLoaded>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\r\n    authError: null\r\n}\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n        }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS': \r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState={\r\n    projects: [\r\n        {id: '1', title: 'help me find messi', content: 'blah blah blah'},\r\n        {id: '2', title: 'help me find neymar', content: 'blah blah blah'},\r\n        {id: '3', title: 'help me find ronaldo', content: 'blah blah blah'}\r\n    ]\r\n}\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        case 'UPDATE_PROJECT' : \r\n            console.log('project updated !', action.project);\r\n            return state;\r\n        case 'UPDATE_PROJECT_ERROR' : \r\n            console.log('UPDATE PROJECT ERROR', action.e);\r\n            return state;\r\n        case 'DELETE_PROJECT' : \r\n            console.log('project deleted !', action.project);\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR' : \r\n            console.log('DELETE PROJECT ERROR', action.e);\r\n            return state;        \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCmu26kalM6BYPu9o-CLYk-rF2KLMI2SCY\",\r\n  authDomain: \"super-blogsite.firebaseapp.com\",\r\n  databaseURL: \"https://super-blogsite.firebaseio.com\",\r\n  projectId: \"super-blogsite\",\r\n  storageBucket: \"super-blogsite.appspot.com\",\r\n  messagingSenderId: \"568073912715\",\r\n  appId: \"1:568073912715:web:2d9d2f238e778935e12f8e\",\r\n  measurementId: \"G-41DPLR5XVY\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n  \r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase,firebaseConfig),\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: {...firebaseConfig, useFirestoreForProfile : true, userProfile : 'users' },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n    <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n    <App />\n    </ReactReduxFirebaseProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}